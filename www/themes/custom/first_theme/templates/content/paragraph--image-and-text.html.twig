{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{% extends "paragraph.html.twig" %}

{% block paragraph %}
{#{{ dump(content.field_media_image['#object'].getAllBehaviorSettings()) }}#}
{#{{ dump(content.field_body['#object'].getAllBehaviorSettings()) }}#}

{% set image_size = content.field_media_image['#object'].getBehaviorSetting('blog_paragraphs_image_and_text', 'image_size', '8_24' ) %}

  {% if image_size == '8_24' %}
    {% set classes_image = ['col-xs-24', 'col-md-8'] %}
    {% set classes_body = ['col-xs-24', 'col-md-16'] %}
  {% elseif image_size == '12_24' %}
    {% set classes_image = ['col-xs-24', 'col-md-12'] %}
    {% set classes_body = ['col-xs-24', 'col-md-12'] %}
  {% elseif image_size == '16_24' %}
    {% set classes_image = ['col-xs-24', 'col-md-16'] %}
    {% set classes_body = ['col-xs-24', 'col-md-8'] %}
  {% elseif image_size == '24_24' %}
    {% set classes_image = ['col-xs-24', 'col-md-24'] %}
    {% set classes_body = ['col-xs-24', 'col-md-24'] %}
  {% endif %}

  {# Костиль для старих значень image_size #}
  {% if image_size == '4_12' %}
    {% set classes_image = ['col-xs-24', 'col-md-8'] %}
    {% set classes_body = ['col-xs-24', 'col-md-16'] %}
  {% elseif image_size == '6_12' %}
    {% set classes_image = ['col-xs-24', 'col-md-12'] %}
    {% set classes_body = ['col-xs-24', 'col-md-12'] %}
  {% elseif image_size == '8_12' %}
    {% set classes_image = ['col-xs-24', 'col-md-16'] %}
    {% set classes_body = ['col-xs-24', 'col-md-8'] %}
  {% elseif image_size == '12_12' %}
    {% set classes_image = ['col-xs-24', 'col-md-24'] %}
    {% set classes_body = ['col-xs-24', 'col-md-24'] %}
  {% endif %}

{% set image_position = content.field_media_image['#object'].getBehaviorSetting('blog_paragraphs_image_and_text', 'image_position', 'left' ) %}
  {% if image_position == 'left' %}
    {% set classes_image = classes_image|merge(['image-position-left']) %}
  {% elseif image_position == 'right' %}
    {% set classes_image = classes_image|merge(['image-position-right']) %}

    {% set cols_array = image_size|split('_') %}
    {% set classes_image = classes_image|merge(['col-xs-push-24', 'col-md-push-' ~ (24 - cols_array[0])]) %}
    {% set classes_body = classes_body|merge(['col-xs-pull-24', 'col-md-pull-' ~ cols_array[0]]) %}

  {% endif %}

  <div{{ attributes.addClass(classes) }}>
    {% block content %}
      {% if content.field_title %}
        <div{{ create_attribute({'class': ['col-xs-24', 'col-md-24']}) }}>{{ content.field_title }}</div>
      {% endif %}
      <div{{ create_attribute({'class': classes_image}) }}>{{ content.field_media_image }}</div>
      <div{{ create_attribute({'class': classes_body}) }}>{{ content.field_body }}</div>
    {% endblock %}
  </div>
{% endblock paragraph %}
